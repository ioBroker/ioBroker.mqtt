{
  "!!! This option is only effective is enabled AND SSL is active. If SSL is disabled, this setting has no effect. !!!": "!!! 此选项仅在启用且 SSL 处于活动状态时有效。如果 SSL 处于禁用状态，则此设置无效。!!!",
  "0 - At most once": "0 - 最多一次",
  "1 - At least once": "1 - 至少一次",
  "2 - Exactly once": "2 - 恰好一次",
  "Adapter settings": "MQTT设置",
  "All new topics will be processed as binary": "所有新主题将作为二进制处理",
  "Always clean sessions for all clients": "始终为所有客户清理会话",
  "Always keep sessions for all clients": "始终为所有客户保留会话",
  "Authentication settings": "认证设置",
  "Chained certificate:": "链式证书",
  "Client": "客户端/订阅人",
  "Client ID:": "客户端ID",
  "Connection": "连接",
  "Connection settings": "连接设置",
  "Default QoS:": "默认服务质量：",
  "Do not check if this instance is available from internet": "不检查此实例是否可从 Internet 获取",
  "Do not create client objects": "不创建客户端对象",
  "Do not create new states": "不要创建新状态",
  "Enable first the adapter to test client.": "首先启用适配器来测试客户端。",
  "First save the adapter": "首先保存适配器",
  "Force clean session": "强制清理会话",
  "IP": "知识产权",
  "IP address": "IP地址",
  "Ignored Topics:": "被忽略的主题",
  "Interval before send topics by connection:": "建立连接后到发送主题前的间隔",
  "Like \"javascript.0.\" to remove it from all topics": "像“javascript.0”。从所有主题中删除它",
  "MQTT Settings": "MQTT设置",
  "MQTT adapter settings": "MQTT适配器设置",
  "Main settings": "主要设置",
  "Mask to publish own state": "隐藏发布自己的状态",
  "Max topic length:": "主题名称最大长度",
  "Password confirmation:": "确认密码",
  "Password:": "密码",
  "Patterns:": "订阅模式",
  "Persistent Session": "持久会话",
  "Port:": "端口",
  "Prefix for topics:": "所有主题都增加前缀",
  "Private certificate:": "私人证书",
  "Public certificate:": "公共证书",
  "Publish all states at start:": "建立连接后发布自己的状态",
  "Publish messages without \"retain\" flag": "发布没有“retain”标志的消息",
  "Publish states on subscribe:": "在订阅后立即发布状态",
  "Remove prefix from topics": "从主题中删除前缀",
  "Result: ": "结果：",
  "Root Certificate Path": "根证书路径",
  "Secure:": "安全",
  "Send interval:": "发送间隔",
  "Send state object as mqtt message": "将状态对象作为 mqtt 消息发送",
  "Send states (ack=true) too:": "同时发送状态(ack=true)",
  "Server": "服务器/代理人",
  "Set certificates or load it first in the system settings (right top).": "首先在系统设置中（右上角）设置并加载证书。",
  "Set retain flag": "设置保留标志",
  "Store only on change:": "仅在变更时发布",
  "Subscribe for topics. (Divided by comma, e.g. 'mqtt/0/#,javascript/#')": "订阅主题。 （以逗号分隔，例如'mqtt/0/#,javascript/#'）",
  "Test connection": "测试与服务器的连接",
  "These states will be published. (Divided by comma)": "这些状态将被发布。 （以逗号分隔，例如'mqtt.0.*,javascript.*'）",
  "Trace output for every message:": "记录每条消息的输出",
  "Type:": "类型",
  "URL:": "URL",
  "Use Self-Signed-Certificate (only if SSL is enabled)": "使用自签名证书（仅当启用 SSL 时）",
  "Use WebSockets:": "使用WebSockets",
  "Use chunk patch:": "使用块补丁",
  "Use client settings": "使用客户端设置",
  "Use different topic names for set and get:": "为set和get使用不同的主题名称",
  "User:": "用户",
  "When WebSockets are enabled, two MQTT server are running, with the port for WebSockets incremented by one. For examble, if the port is set to 8883, then the server with WebSockets runs on 8884, or if the port is 1883 (without SSL), then with WebSockets it runs on 1884.": "启用 WebSocket 后，将运行两个 MQTT 服务器，WebSocket 端口号会加一。例如，如果端口设置为 8883，则支持 WebSocket 的服务器运行在 8884 端口；如果端口设置为 1883（不支持 SSL），则支持 WebSocket 的服务器运行在 1884 端口。",
  "chars": "字符",
  "connected": "连接的",
  "ms": "毫秒",
  "rejectUnauthorized": "拒绝未经授权的服务器",
  "Protocol settings": "协议设置",
  "MQTT Protocol Version:": "MQTT协议版本",
  "MQTT v3.1.1 (default)": "MQTT v3.1.1 (默认)",
  "MQTT v5": "MQTT v5"
}