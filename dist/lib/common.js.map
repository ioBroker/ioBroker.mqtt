{"version":3,"file":"common.js","sourceRoot":"","sources":["../../src/lib/common.ts"],"names":[],"mappings":"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","sourcesContent":["import type { MqttAdapterConfig, MqttClientID, MqttPattern, MqttTopic } from './types';\n\nexport function convertID2topic(\n    id: string,\n    pattern: MqttPattern | null,\n    prefix: string,\n    namespace: `${string}.${number}`,\n    removePrefix: string,\n): string {\n    let topic;\n    id = (id || '').toString();\n    if (id.startsWith(removePrefix)) {\n        id = id.substring(removePrefix.length);\n    }\n    if (pattern?.startsWith(prefix + namespace)) {\n        topic = prefix + id;\n    } else if (pattern?.startsWith(namespace)) {\n        topic = id;\n    } else if (prefix && pattern?.startsWith(prefix)) {\n        topic = prefix + id; // .substring(namespace.length + 1);\n    } else if (id.startsWith(namespace)) {\n        topic = (prefix || '') + id.substring(namespace.length + 1);\n    } else {\n        topic = (prefix || '') + id;\n    }\n    topic = topic.replace(/\\./g, '/');\n    topic = topic.replace(/[+#]/g, '_');\n    return topic;\n}\n\n/*4.7.1.3 Single level wildcard\n\n The plus sign (‘+’ U+002B) is a wildcard character that matches only one topic level.\n\n The single-level wildcard can be used at any level in the Topic Filter, including first and last levels. Where it is used it MUST occupy an entire level of the filter [MQTT-4.7.1-3]. It can be used at more than one level in the Topic Filter and can be used in conjunction with the multilevel wildcard.\n\n Non-normative comment\n For example, “sport/tennis/+” matches “sport/tennis/player1” and “sport/tennis/player2”, but not “sport/tennis/player1/ranking”. Also, because the single-level wildcard matches only a single level, “sport/+” does not match “sport” but it does match “sport/”.\n\n Non-normative comment\n ·         “+” is valid\n ·         “+/tennis/#” is valid\n ·         “sport+” is not valid\n ·         “sport/+/player1” is valid\n ·         “/finance” matches “+/+” and “/+”, but not “+”\n */\nexport function pattern2RegEx(pattern: MqttPattern, adapter: ioBroker.Adapter): string {\n    pattern = convertTopic2id(pattern, true, (adapter.config as MqttAdapterConfig).prefix, adapter.namespace);\n    pattern = pattern.replace(/#/g, '*');\n    pattern = pattern.replace(/\\$/g, '\\\\$');\n    pattern = pattern.replace(/\\^/g, '\\\\^');\n\n    if (pattern !== '*') {\n        if (pattern[0] === '*' && pattern[pattern.length - 1] !== '*') {\n            pattern += '$';\n        }\n        if (pattern[0] !== '*' && pattern[pattern.length - 1] === '*') {\n            pattern = `^${pattern}`;\n        }\n        if (pattern[0] === '+') {\n            pattern = `^[^.]*${pattern.substring(1)}`;\n        }\n        if (pattern[pattern.length - 1] === '+') {\n            pattern = `${pattern.substring(0, pattern.length - 1)}[^.]*$`;\n        }\n    } else {\n        return '.*';\n    }\n    pattern = pattern.replace(/\\./g, '\\\\.');\n    pattern = pattern.replace(/\\\\\\.\\*/g, '\\\\..*');\n    pattern = pattern.replace(/\\+/g, '[^.]*');\n    return pattern;\n}\n\n/**\n * Checks whether a received topic should be ignored\n *\n * @param topic The topic to check\n * @param ignoredTopicsRegexes The ignored topics filter\n * @returns Whether it should be ignored\n */\nexport function isIgnoredTopic(topic: MqttTopic, ignoredTopicsRegexes: RegExp[]): boolean {\n    if (ignoredTopicsRegexes.length === 0) {\n        return false;\n    }\n    for (const regex of ignoredTopicsRegexes) {\n        if (regex.test(topic)) {\n            return true;\n        }\n    }\n    return false;\n}\n\nexport function state2string(val: ioBroker.StateValue | ioBroker.State, sendStateObject?: boolean | null): string {\n    if (sendStateObject === undefined || sendStateObject === null) {\n        sendStateObject = false;\n    }\n\n    if (val && typeof val === 'object') {\n        if (val.val === null) {\n            return 'null';\n        }\n        return val.val === null\n            ? 'null'\n            : val.val === undefined\n              ? 'undefined'\n              : sendStateObject === true\n                ? JSON.stringify(val)\n                : val.val.toString();\n    }\n    return val === null\n        ? 'null'\n        : val === undefined\n          ? 'undefined'\n          : sendStateObject === true\n            ? JSON.stringify(val)\n            : val.toString();\n}\n\nexport function convertTopic2id(\n    topic: MqttTopic,\n    dontCutNamespace: boolean,\n    prefix: string,\n    namespace: `${string}.${number}`,\n): string {\n    if (!topic) {\n        return topic;\n    }\n\n    // Remove own prefix if\n    if (prefix && topic.substring(0, prefix.length) === prefix) {\n        topic = topic.substring(prefix.length);\n    }\n\n    topic = topic.replace(/\\//g, '.').replace(/\\s/g, '_');\n    if (topic[0] === '.') {\n        topic = topic.substring(1);\n    }\n    if (topic[topic.length - 1] === '.') {\n        topic = topic.substring(0, topic.length - 1);\n    }\n\n    if (!dontCutNamespace && topic.startsWith(namespace)) {\n        topic = topic.substring(namespace.length + 1);\n    }\n    // If someone sent a training / we remove it\n    if (topic.endsWith('.')) {\n        topic = topic.substring(0, topic.length - 1);\n    }\n\n    return topic;\n}\n\nexport async function ensureObjectStructure(\n    adapter: ioBroker.Adapter,\n    id: string,\n    verifiedObjects: Record<string, boolean>,\n): Promise<void> {\n    if (!id.startsWith(`${adapter.namespace}.`)) {\n        return;\n    }\n    if (verifiedObjects[id] === true) {\n        return;\n    }\n    id = id.substring(adapter.namespace.length + 1);\n    let idToCheck = adapter.namespace;\n\n    const idArr = id.split('.');\n    idArr.pop(); // the last is created as an object in any way\n    verifiedObjects[id] = true;\n\n    for (const part of idArr) {\n        idToCheck += `.${part}`;\n        if (verifiedObjects[idToCheck] === true) {\n            continue;\n        }\n        verifiedObjects[idToCheck] = true;\n        let obj;\n        try {\n            obj = await adapter.getForeignObjectAsync(idToCheck);\n        } catch {\n            // ignore\n        }\n        if (\n            obj?.type === 'folder' &&\n            obj.native &&\n            !obj.native.autocreated &&\n            !Object.keys(obj.native).length &&\n            obj.common?.name === part\n        ) {\n            // Object from the very first auto-create try\n            // We re-create the object with our reason identifier\n            obj = null;\n        }\n\n        if (!obj?.common) {\n            adapter.log.debug(`Create folder object for ${idToCheck}`);\n            try {\n                await adapter.setForeignObjectAsync(idToCheck, {\n                    type: 'folder',\n                    common: {\n                        name: part,\n                    },\n                    native: {\n                        autocreated: 'by automatic ensure logic',\n                    },\n                });\n            } catch (err) {\n                adapter.log.info(`Can not create parent folder object: ${(err as Error).message}`);\n            }\n        }\n        verifiedObjects[idToCheck] = true;\n    }\n}\n\nexport function convertMessage(\n    topic: MqttTopic,\n    message: any,\n    adapter: ioBroker.Adapter,\n    clientID?: MqttClientID,\n): string | number | boolean | Record<string, any> {\n    let type = typeof message;\n\n    if (type !== 'string' && type !== 'number' && type !== 'boolean') {\n        message = message ? message.toString('utf8') : 'null';\n        type = 'string';\n    }\n\n    // try to convert 101,124,444,... To utf8 string\n    if (type === 'string' && message.match(/^(\\d)+,\\s?(\\d)+,\\s?(\\d)+/)) {\n        const parts = message.split(',');\n        try {\n            let str = '';\n            for (let p = 0; p < parts.length; p++) {\n                str += String.fromCharCode(parseInt(parts[p].trim(), 10));\n            }\n            message = str;\n        } catch {\n            // cannot convert and ignore it\n        }\n    }\n\n    if (type === 'string') {\n        // Try to convert value\n        const _val = message.replace(',', '.');\n\n        if (isFinite(_val)) {\n            return parseFloat(_val);\n        }\n        if (message === 'true') {\n            return true;\n        }\n        if (message === 'false') {\n            return false;\n        }\n    }\n\n    if (type === 'string' && message[0] === '{') {\n        try {\n            const _message = JSON.parse(message);\n            // Fast solution\n            if (_message.val !== undefined) {\n                message = _message;\n                // Really right, but slow\n                //var valid = true;\n                //for (var attr in _message) {\n                //    if (!Object.prototype.hasOwnProperty.call(_message, attr)) continue;\n                //    if (attr !== 'val' && attr !== 'ack' && attr !== 'ts' && attr !== 'q' &&\n                //        attr !== 'lc' && attr !== 'comm' && attr !== 'lc') {\n                //        valid = false;\n                //        break;\n                //    }\n                //}\n                //if (valid) message = _message;\n            }\n        } catch {\n            if (clientID) {\n                adapter.log.error(`Client [${clientID}] Cannot parse \"${topic}\": ${message}`);\n            } else {\n                adapter.log.warn(`Cannot parse \"${topic}\": ${message}`);\n            }\n        }\n    }\n\n    return message;\n}\n"]}